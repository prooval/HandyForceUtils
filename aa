// I have an object which has keys like Owner, or Branch__r and other keys. If the key's value contains "attributes", I want to parse that JSON value. Then,
// I want to add to the original object the keys received after parsing that JSON. However, I would like to use a convention like Branch__r.xxxx where xxxx
// is the key of the parsed JSON value.

protected beforeMigrationBatchOnRecordsReady(batchRecords: any[]): any[] {
    for (const eachRecord of batchRecords) {
        if (this.config.stageRecordsInFile) {
            this.flattenJsonAttributes(eachRecord);
        }
    }
    
    return batchRecords;
}

private flattenJsonAttributes(record: any): void {
    for (const key in record) {
        if (record.hasOwnProperty(key) && record[key]) {
            const value = record[key];
            
            // Check if the value is a string that contains "attributes" (likely JSON)
            if (typeof value === 'string' && value.includes('attributes')) {
                try {
                    const parsedValue = JSON.parse(value);
                    
                    // If parsing successful and contains attributes, add parsed keys to original object
                    if (parsedValue && typeof parsedValue === 'object') {
                        for (const parsedKey in parsedValue) {
                            if (parsedValue.hasOwnProperty(parsedKey)) {
                                // Use convention: originalKey.parsedKey
                                const newKey = `${key}.${parsedKey}`;
                                record[newKey] = parsedValue[parsedKey];
                            }
                        }
                    }
                } catch (error) {
                    // If JSON parsing fails, continue with next key
                    console.warn(`Failed to parse JSON for key ${key}:`, error);
                }
            }
        }
    }
}
